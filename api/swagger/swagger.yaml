swagger: "2.0"
info:
  version: "1.0.0"
  title: User
  description: This is a sample server connects with a mongo database. 
  contact:
    name: AM
    url: andrea191.altervista.org/User/index.html
    email: am@none.com
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      tags:
        - Hello
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: users
    get: 
      tags:
        - User
      summary: Get users' list
      description: Return 'Hello' to the users
      operationId: getUsersAndHello
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloUsersResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - User
      summary: Add user
      description: Adds a new user to the database
      operationId: postUser
      parameters:
        - name: user
          in: body
          description: The user to add
          schema:
            required:
              - name
            properties:
              name:
                type: string
      responses:
        "200":
          description: Success
        default:
          description: Error
  /users/{name}:
    x-swagger-router-controller: users
    get:
      tags:
        - User
      summary: Get user
      description: Return a single user for its name
      operationId: getUserAndHello
      parameters:
        - name: name
          in: path
          required: true
          description: The person's name
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/HelloUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: 
        - User
      summary: Delete user
      description: Remove a single user for its name
      operationId: deleteUser
      parameters:
        - name: name
          in: path
          required: true
          description: The person's name
          type: string
      responses:
        "200":
          description: Success
        default:
          description: Error
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  HelloUserResponse:
    required:
      - message
    properties:
      message:
        type: string
  HelloUsersResponse:
    type: array
    items:
      $ref: "#/definitions/HelloUserResponse"
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
